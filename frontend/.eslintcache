[{"C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\index.js":"1","C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\screens\\Home\\index.js":"2","C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\screens\\Login\\index.js":"3","C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\screens\\FilmsList\\index.js":"4"},{"size":207,"mtime":1615327311225,"results":"5","hashOfConfig":"6"},{"size":2853,"mtime":1615327311227,"results":"7","hashOfConfig":"6"},{"size":3536,"mtime":1615327311227,"results":"8","hashOfConfig":"6"},{"size":1364,"mtime":1615327311226,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s2uc95",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\index.js",[],"C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\screens\\Home\\index.js",["19"],"C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\screens\\Login\\index.js",["20"],"C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\screens\\FilmsList\\index.js",["21"],"import React, { useEffect, useState } from 'react';\r\nimport MovieCard from '../../components/MovieCard';\r\nimport api from '../../services/api';\r\nimport classes from './filmslist.module.css'\r\n\r\nconst FilmsList = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n\r\n    const loadingMovies = async () => {\r\n        const response = await api.get(`/filmes`); //Chave de busca da API\r\n        setMovies([]);\r\n        if (response.data)\r\n            setMovies(response.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadingMovies();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Lista de Filmes</h1>\r\n             <div>\r\n                <label htmlFor=\"search\">Pesquisar:</label>\r\n                <input\r\n                    id=\"search\"\r\n                    name=\"search\"\r\n                    type=\"text\"\r\n                    value={search}\r\n                    onChange={(e) => { setSearch(e.target.value) }}\r\n                />\r\n            </div>\r\n            <ul>\r\n                {movies.map(m => {\r\n                    return (\r\n                        <li key={m.id}>\r\n                            <MovieCard movie={m}\r\n                            />\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FilmsList;",{"ruleId":"22","severity":1,"message":"23","line":10,"column":17,"nodeType":"24","endLine":10,"endColumn":86},{"ruleId":"25","severity":1,"message":"26","line":10,"column":11,"nodeType":"27","messageId":"28","endLine":10,"endColumn":19},{"ruleId":"25","severity":1,"message":"29","line":4,"column":8,"nodeType":"27","messageId":"28","endLine":4,"endColumn":15},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'validate' is assigned a value but never used.","Identifier","unusedVar","'classes' is defined but never used."]