[{"C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\components\\MovieCard\\index.js":"1","C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\screens\\Home\\index.js":"2","C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\screens\\FilmsList\\index.js":"3","C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\services\\api.js":"4"},{"size":2215,"mtime":1615485616591,"results":"5","hashOfConfig":"6"},{"size":3244,"mtime":1615492403831,"results":"7","hashOfConfig":"6"},{"size":3062,"mtime":1615488322123,"results":"8","hashOfConfig":"6"},{"size":151,"mtime":1615332525594,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"s2uc95",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\components\\MovieCard\\index.js",["20"],"C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\screens\\Home\\index.js",["21"],"C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\screens\\FilmsList\\index.js",["22","23","24","25","26"],"import React, { useEffect, useState } from 'react';\r\nimport MovieCard from '../../components/MovieCard';\r\nimport api from '../../services/api';\r\nimport classes from './filmslist.module.css'\r\nimport imgLogo from '../../img/logo.png'\r\n\r\nconst FilmsList = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n\r\n    const loadingMovies = async () => {\r\n        let response;\r\n        if (search === '')\r\n            response = await api.get(`/filmes`);\r\n        else\r\n            response = await api.get(`/filmes/nome/${search}`); //Chave de busca da API\r\n        setMovies([]);\r\n        if (response.data)\r\n            setMovies(response.data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadingMovies();\r\n    }, [search]);\r\n\r\n    return (\r\n        <>\r\n            <nav className={classes.navBarSearch}>\r\n                <div className={classes.listNavBar}>\r\n                    <div className={classes.items} style={{ paddingInline: 35 }}>\r\n                        <img className={classes.imgLogo} src={imgLogo} width=\"50\" height=\"50\" />\r\n                        <div>\r\n                            <button className={classes.searchTab}>\r\n                                <i class=\"fas fa-search\"></i>\r\n                                <input\r\n                                    className={classes.search}\r\n                                    id=\"search\"\r\n                                    name=\"search\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Pesquisa\"\r\n                                    value={search}\r\n                                    onChange={(e) => { setSearch(e.target.value) }}\r\n                                />\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className={classes.bars}>\r\n                            <button type=\"button\" class=\"btn dropdown-toggle\" data-toggle=\"dropdown\">\r\n                                Categorias\r\n                            </button>\r\n                            <div class=\"dropdown-menu bg-secondary\">\r\n                                <a class=\"dropdown-item text-dark\" href=\"#\">Ação</a>\r\n                                <a class=\"dropdown-item text-dark\" href=\"#\">Aventura</a>\r\n                                <a class=\"dropdown-item text-dark\" href=\"#\">Comédia</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h2>Seja muito bem-vindo(a)! Pegue uma pipoca e aproveite nossa lista de filmes! </h2>\r\n\r\n                </div>\r\n                <div className={classes.list}>\r\n                    {movies.map(m => {\r\n                        return (\r\n                            <div key={m.id}>\r\n                                <MovieCard movie={m}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FilmsList;",["27","28"],"C:\\Users\\zJukiita\\Desktop\\Códigos\\senacplay\\frontend\\src\\services\\api.js",[],{"ruleId":"29","severity":1,"message":"30","line":5,"column":10,"nodeType":"31","messageId":"32","endLine":5,"endColumn":14},{"ruleId":"33","severity":1,"message":"34","line":14,"column":25,"nodeType":"35","endLine":14,"endColumn":96},{"ruleId":"36","severity":1,"message":"37","line":24,"column":8,"nodeType":"38","endLine":24,"endColumn":16,"suggestions":"39"},{"ruleId":"33","severity":1,"message":"34","line":31,"column":25,"nodeType":"35","endLine":31,"endColumn":97},{"ruleId":"40","severity":1,"message":"41","line":52,"column":33,"nodeType":"35","endLine":52,"endColumn":77},{"ruleId":"40","severity":1,"message":"41","line":53,"column":33,"nodeType":"35","endLine":53,"endColumn":77},{"ruleId":"40","severity":1,"message":"41","line":54,"column":33,"nodeType":"35","endLine":54,"endColumn":77},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadingMovies'. Either include it or remove the dependency array.","ArrayExpression",["46"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["47"],"no-negated-in-lhs",["48"],{"desc":"49","fix":"50"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [loadingMovies, search]",{"range":"51","text":"52"},[760,768],"[loadingMovies, search]"]