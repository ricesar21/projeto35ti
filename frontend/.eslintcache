[{"C:\\Area de Trabalho\\senacplay\\frontend\\src\\screens\\FilmsList\\index.js":"1","C:\\Area de Trabalho\\senacplay\\frontend\\src\\components\\WatchMovie\\index.js":"2","C:\\Area de Trabalho\\senacplay\\frontend\\src\\components\\MovieCard\\index.js":"3","C:\\Area de Trabalho\\senacplay\\frontend\\src\\index.js":"4","C:\\Area de Trabalho\\senacplay\\frontend\\src\\screens\\Register\\index.js":"5","C:\\Area de Trabalho\\senacplay\\frontend\\src\\screens\\Login\\index.js":"6","C:\\Area de Trabalho\\senacplay\\frontend\\src\\services\\api.js":"7","C:\\Area de Trabalho\\senacplay\\frontend\\src\\App.js":"8","C:\\Area de Trabalho\\senacplay\\frontend\\src\\screens\\Home\\index.js":"9","C:\\Area de Trabalho\\senacplay\\frontend\\src\\screens\\Watch\\index.js":"10"},{"size":2562,"mtime":1615439354128,"results":"11","hashOfConfig":"12"},{"size":739,"mtime":1615435589937,"results":"13","hashOfConfig":"12"},{"size":2228,"mtime":1615438797607,"results":"14","hashOfConfig":"12"},{"size":207,"mtime":1615431005291,"results":"15","hashOfConfig":"12"},{"size":5787,"mtime":1615389250147,"results":"16","hashOfConfig":"12"},{"size":4005,"mtime":1615389684542,"results":"17","hashOfConfig":"12"},{"size":151,"mtime":1615431021174,"results":"18","hashOfConfig":"12"},{"size":706,"mtime":1615435888683,"results":"19","hashOfConfig":"12"},{"size":3240,"mtime":1615351142482,"results":"20","hashOfConfig":"12"},{"size":841,"mtime":1615435985534,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"eprrxj",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Area de Trabalho\\senacplay\\frontend\\src\\screens\\FilmsList\\index.js",["46","47"],"C:\\Area de Trabalho\\senacplay\\frontend\\src\\components\\WatchMovie\\index.js",["48"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './watch.modules.css'\r\n\r\n\r\nconst Movie = (props) => {\r\n    return (\r\n        <>\r\n            <body className={classes.body}>\r\n                <br />\r\n                <h1 className={classes.titulo}>{props.movie.nome}</h1>\r\n                <div className={classes.conteudo}>\r\n                    <h6 className={classes.palavras}>Ano: {props.movie.anoDeLancamento}</h6>\r\n                    <h6 className={classes.palavras}>Duração: {props.movie.duracao}</h6>\r\n                    <h6 className={classes.palavras}>Avaliação: {props.movie.avaliacao}</h6>\r\n                </div>\r\n            </body>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Movie;","C:\\Area de Trabalho\\senacplay\\frontend\\src\\components\\MovieCard\\index.js",[],"C:\\Area de Trabalho\\senacplay\\frontend\\src\\index.js",[],"C:\\Area de Trabalho\\senacplay\\frontend\\src\\screens\\Register\\index.js",[],["49","50"],"C:\\Area de Trabalho\\senacplay\\frontend\\src\\screens\\Login\\index.js",["51"],"import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport classes from './login.module.css';\r\nimport * as Yup from 'yup';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport api from '../../services/api';\r\n\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const validate = (values) => {\r\n        const errors = {};\r\n        if (!values.name) {\r\n            errors.name = 'Obrigatório';\r\n        }\r\n        return errors;\r\n\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            senha: '',\r\n\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string().email('E-mail inválido').required('Obrigatório'),\r\n            senha: Yup.string().required('Obrigatório'),\r\n        }),\r\n\r\n        onSubmit: async (values) => {\r\n            try {\r\n                const login = {\r\n                    email: values.email,\r\n                    senha: values.senha\r\n                };\r\n                const response = await api.post('/login', login);\r\n                if (response.data) {\r\n                    history.push('/filmslist')\r\n                }\r\n\r\n            } catch (error) {\r\n                alert(`Ocorreu uma falha durante o Login. Tente novamente! ${error}`);\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n\r\n            <body className={classes.body}>\r\n                <nav className={classes.leftArrow}>\r\n                    <Link to=\"/\" className={classes.backButton}><i class=\"fas fa-arrow-circle-left fa-3x\"></i></Link>\r\n                </nav>\r\n                <main className={classes.main}>\r\n                    <h2 className={classes.h2}>Login</h2>\r\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n\r\n                        <div>\r\n\r\n                            <label htmlFor=\"email\" className={classes.formTitle}>Email: </label>\r\n                            <br />\r\n                            <input\r\n                                className={classes.fieldInput}\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                placeholder=\"Insira seu email\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.email}\r\n                            />\r\n                            {formik.touched.email && formik.errors.email ? <label htmlFor=\"email\" className={classes.error}>{formik.errors.email}</label> : null}\r\n                            <div className={classes.underline}></div>\r\n                            <br />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label htmlFor=\"senha\" className={classes.formTitle}>Senha: </label>\r\n                            <br />\r\n                            <input\r\n                                className={classes.fieldInput}\r\n                                id=\"senha\"\r\n                                name=\"senha\"\r\n                                type=\"password\"\r\n                                placeholder=\"Insira sua senha\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.senha}\r\n                            />\r\n                            {formik.touched.senha && formik.errors.senha ? <label htmlFor=\"senha\" className={classes.error}>{formik.errors.senha}</label> : null}\r\n                            <div className={classes.underline} id=\"underline\"></div>\r\n                            <br />\r\n                        </div>\r\n                        <input type=\"submit\" className={classes.inputSubmit} value=\"Continue\"></input>\r\n                    </form>\r\n\r\n\r\n\r\n                </main>\r\n            </body>\r\n\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default Login;",["52","53"],"C:\\Area de Trabalho\\senacplay\\frontend\\src\\services\\api.js",[],"C:\\Area de Trabalho\\senacplay\\frontend\\src\\App.js",[],"C:\\Area de Trabalho\\senacplay\\frontend\\src\\screens\\Home\\index.js",["54"],"C:\\Area de Trabalho\\senacplay\\frontend\\src\\screens\\Watch\\index.js",["55","56"],{"ruleId":"57","severity":1,"message":"58","line":24,"column":8,"nodeType":"59","endLine":24,"endColumn":16,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":31,"column":25,"nodeType":"63","endLine":31,"endColumn":97},{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":14},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"64","severity":1,"message":"72","line":11,"column":11,"nodeType":"66","messageId":"67","endLine":11,"endColumn":19},{"ruleId":"68","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"61","severity":1,"message":"62","line":14,"column":25,"nodeType":"63","endLine":14,"endColumn":94},{"ruleId":"64","severity":1,"message":"75","line":7,"column":12,"nodeType":"66","messageId":"67","endLine":7,"endColumn":18},{"ruleId":"64","severity":1,"message":"76","line":7,"column":20,"nodeType":"66","messageId":"67","endLine":7,"endColumn":29},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadingMovies'. Either include it or remove the dependency array.","ArrayExpression",["77"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"'validate' is assigned a value but never used.",["78"],["79"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.",{"desc":"80","fix":"81"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [loadingMovies, search]",{"range":"82","text":"83"},[760,768],"[loadingMovies, search]"]